#include "headers/testing.h"

void objectTesting() {
    // Date object testing
    Date date1 = Date(2, 24, 2004);
    std::cout << "========== Date Object Testing ==========" << std::endl;
    std::cout << "Testing Constructors" << std::endl;
    Date defConst = Date();
    std::cout << "Default Constructor: " << defConst.toString() << std::endl;
    std::cout << "Non-Default Constructor: " << date1.toString() << std::endl << std::endl;
    std::cout << "Testing Getters" << std::endl;
    std::cout << "getMonth(): " << date1.getMonth() << std::endl;
    std::cout << "getDay(): " << date1.getDay() << std::endl;
    std::cout << "getYear(): " << date1.getYear() << std::endl << std::endl;
    std::cout << "Testing Setters" << std::endl;
    Date tempDate = date1;
    date1.setDate(5, 15, 1995);
    std::cout << "Before setDate(): " << tempDate.toString() << ", "<< " After setDate(): " <<
              date1.toString() << std::endl << std::endl;
    std::cout << "Testing Equality" << std::endl;
    Date date2 = Date(5, 15, 1995);
    Date date3 = Date(1, 1, 1990);
    Date date4 = Date(1, 1, 1990);
    int equalTest1 = date2.equals(date3);
    int equalTest2 = date3.equals(date4);
    std::cout << "Date 1: " << date2.toString() << ", Date 2: " << date3.toString() << std::endl;
    std::cout << "Result: " << equalTest1 << std::endl;
    std::cout << "Date 1: " << date3.toString() << ", Date 2: " << date4.toString() << std::endl;
    std::cout << "Result: " << equalTest2 << std::endl << std::endl;
    std::cout << "Testing Comparison" << std::endl;
    int comparisonTest1 = date2.compareTo(date3);
    int comparisonTest2 = date3.compareTo(date2);
    int comparisonTest3 = date3.compareTo(date4);
    // 1: >, -1: <, 0: =
    std::cout << date2.toString() << " > " << date3.toString() << " ?" << std::endl;
    std::cout << "Result: " << comparisonTest1 << std::endl;
    std::cout << date3.toString() << " > " << date2.toString() << " ?" << std::endl;
    std::cout << "Result: " << comparisonTest2 << std::endl;
    std::cout << date3.toString() << " > " << date4.toString() << " ?" << std::endl;
    std::cout << "Result: " << comparisonTest3 << std::endl << std::endl;

    // Pack object testing
    Pack pack1 = Pack("Cover", "G4", Date(4, 40, 1999), 100, 200);
    std::cout << "========== Pack Object Testing ==========" << std::endl;
    std::cout << "Testing Constructors" << std::endl;
    Pack defPack = Pack();
    std::cout << "Default Constructor: " << std::endl << "\t" << defPack.toString() << std::endl ;
    std::cout << "Non-Default Constructor: " << std::endl << "\t" << pack1.toString() << std::endl << std::endl;
    std::cout << "Testing Getters" << std::endl;
    std::cout << "getReceiver(): " << pack1.getReceiver() << std::endl;
    std::cout << "getZone(): " << pack1.getZone() << std::endl;
    std::cout << "getDeliveryDate(): " << pack1.getDeliveryDate().toString() << std::endl;
    std::cout << "getTime(): " << pack1.getTime() << std::endl << std::endl;
    std::cout << "Testing Setters" << std::endl;
    std::cout << "Before Setters: " << std::endl << "\t" << pack1.toString() << std::endl << std::endl;
    pack1.setReceiver("Cover Corp.");
    pack1.setZone("A2");
    pack1.setDeliveryDate(Date(9, 13, 2020));
    pack1.setWeight(445);
    pack1.setVolume(300);
    std::cout << "After Setters" << std::endl;
    std::cout << "Before Setters: " << std::endl << "\t" << pack1.toString() << std::endl << std::endl;
    std::cout << "Testing Comparison" << std::endl;
    Pack pack2 = Pack("Company", "A3", Date(1,1,2000), 300, 200);
    Pack pack3 = Pack("Company", "A3", Date(1,1,2002), 100, 99);
    std::cout << "Pack 1: " << pack1.toString() << std::endl;
    std::cout << "Pack 2: " << pack2.toString() << std::endl;
    std::cout << "Pack 3: " << pack3.toString() << std::endl;
    int result = pack1.compareTo(pack2);
    int result2 = pack2.compareTo(pack1);
    int result3 = pack2.compareTo(pack3);
    std::cout << "Pack 1 > Pack 2: " << result << std::endl;
    std::cout << "Pack 1 < Pack 2: " << result2 << std::endl;
    std::cout << "Pack 2 > Pack 3: " << result3 << std::endl << std::endl;


    std::cout << "========== Special Pack Object Testing ==========" << std::endl;
    std::cout << "Testing Constructors" << std::endl;
    SpecialPack sp1;
    SpecialPack sp2 = SpecialPack("Cover", "J3", Date(5, 19, 2025), 193, 432, 11);
    std::cout << "Default Constructor: " << std::endl << "\t" << sp1.toString() << std::endl;
    std::cout << "Non-Default Constructor: " << std::endl << "\t" << sp2.toString() << std::endl << std::endl;
    std::cout << "Testing getTime(): " << std::to_string(sp2.getTime()) << std::endl;
    sp2.setTime(10);
    std::cout << "Testing seTime(10): " << std::to_string(sp2.getTime()) << std::endl << std::endl;

    // Truck Objects testing
    std::cout << "========== Truck Objects Testing ==========" << std::endl;
    std::cout << "---------- SmallTruck Object Testing ----------" << std::endl;
    Pack packOne = Pack("Company1", "A1", Date(5, 19, 2025), 200, 300);
    Pack packTwo = Pack("Company2", "A2", Date(5, 20, 2025), 300, 100);
    Pack packThree = Pack("Company3", "A3", Date(5, 21, 2025), 12, 34);
    SmallTruck st1;
    std:: cout << "Creating Empty Truck:" << std::endl;
    std::cout << "\t" << st1.toString() << std::endl << std::endl;
    std::cout << "SmallTruck after adding three packs:" << std::endl;
    st1.addPack(packOne);
    st1.addPack(packTwo);
    st1.addPack(packThree);
    std::cout << "\t" << st1.toString() << std::endl << std::endl;
    std::cout << "SmallTruck after removing one pack:" << std::endl;
    st1.removePack(packThree);
    std::cout << "\t" << st1.toString() << std::endl << std::endl;
    std::cout << "SmallTruck getTruckHours(): " << st1.getTruckHours() << std::endl;
    std::cout << "SmallTruck totalTruckHours(): " << st1.totalTruckHours() << std::endl;
    std::cout << "SmallTruck getMaxWeight(): " << st1.getMaxWeight() << std::endl;
    std::cout << "SmallTruck getMaxVolume(): " << st1.getMaxVolume() << std::endl << std::endl;
    std::cout << "Display packs in small truck:" << std::endl;
    st1.getPackages().display();
    std::cout << std::endl << "Show all small trucks with different IDs:" << std::endl;
    SmallTruck st2;
    SmallTruck st3;
    std::cout << "\t" << st1.toString() << std::endl;
    std::cout << "\t" << st2.toString() << std::endl;
    std::cout << "\t" << st3.toString() << std::endl << std::endl;

    std::cout << "---------- MediumTruck Object Testing ----------" << std::endl;
    Pack packFour = Pack("Company1", "A1", Date(5, 19, 2025), 200, 300);
    Pack packFive = Pack("Company2", "A2", Date(5, 20, 2025), 300, 100);
    Pack packSix = Pack("Company3", "A3", Date(5, 21, 2025), 12, 34);
    MediumTruck st4;
    std:: cout << "Creating Empty Truck:" << std::endl;
    std::cout << "\t" << st4.toString() << std::endl << std::endl;
    std::cout << "MediumTruck after adding three packs:" << std::endl;
    st4.addPack(packOne);
    st4.addPack(packTwo);
    st4.addPack(packThree);
    std::cout << "\t" << st4.toString() << std::endl << std::endl;
    std::cout << "MediumTruck after removing one pack:" << std::endl;
    st4.removePack(packThree);
    std::cout << "\t" << st4.toString() << std::endl << std::endl;
    std::cout << "MediumTruck getTruckHours(): " << st4.getTruckHours() << std::endl;
    std::cout << "MediumTruck totalTruckHours(): " << st4.totalTruckHours() << std::endl;
    std::cout << "MediumTruck getMaxWeight(): " << st4.getMaxWeight() << std::endl;
    std::cout << "MediumTruck getMaxVolume(): " << st4.getMaxVolume() << std::endl << std::endl;
    std::cout << "Display packs in small truck:" << std::endl;
    st4.getPackages().display();
    std::cout << std::endl << "Show all small trucks with different IDs:" << std::endl;
    SmallTruck st5;
    SmallTruck st6;
    std::cout << "\t" << st4.toString() << std::endl;
    std::cout << "\t" << st5.toString() << std::endl;
    std::cout << "\t" << st6.toString() << std::endl << std::endl;

    std::cout << "---------- LargeTruck Object Testing ----------" << std::endl;
    Pack packSeven = Pack("Company1", "A1", Date(5, 19, 2025), 200, 300);
    Pack packEight = Pack("Company2", "A2", Date(5, 20, 2025), 300, 100);
    Pack packNine = Pack("Company3", "A3", Date(5, 21, 2025), 12, 34);
    LargeTruck st7;
    std:: cout << "Creating Empty Truck:" << std::endl;
    std::cout << "\t" << st7.toString() << std::endl << std::endl;
    std::cout << "LargeTruck after adding three packs:" << std::endl;
    st7.addPack(packOne);
    st7.addPack(packTwo);
    st7.addPack(packThree);
    std::cout << "\t" << st7.toString() << std::endl << std::endl;
    std::cout << "LargeTruck after removing one pack:" << std::endl;
    st7.removePack(packThree);
    std::cout << "\t" << st7.toString() << std::endl << std::endl;
    std::cout << "LargeTruck getTruckHours(): " << st7.getTruckHours() << std::endl;
    std::cout << "LargeTruck totalTruckHours(): " << st7.totalTruckHours() << std::endl;
    std::cout << "LargeTruck getMaxWeight(): " << st7.getMaxWeight() << std::endl;
    std::cout << "LargeTruck getMaxVolume(): " << st7.getMaxVolume() << std::endl << std::endl;
    std::cout << "Display packs in small truck:" << std::endl;
    st7.getPackages().display();
    std::cout << std::endl << "Show all small trucks with different IDs:" << std::endl;
    SmallTruck st8;
    SmallTruck st9;
    std::cout << "\t" << st7.toString() << std::endl;
    std::cout << "\t" << st8.toString() << std::endl;
    std::cout << "\t" << st9.toString() << std::endl << std::endl;
}
